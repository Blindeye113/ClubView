// <auto-generated />
using ClubView.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClubView.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230526121317_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("ClubView.API.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ClubView.API.Models.ClubMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ClubMembers");
                });

            modelBuilder.Entity("ClubView.API.Models.MemberClub", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClubId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MemberId", "ClubId");

                    b.HasIndex("ClubId");

                    b.ToTable("MemberClubs");
                });

            modelBuilder.Entity("ClubView.API.Models.Whiskey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base64Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClubMemberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Whiskeys");
                });

            modelBuilder.Entity("ClubView.API.Models.MemberClub", b =>
                {
                    b.HasOne("ClubView.API.Models.Club", "Club")
                        .WithMany("MemberClubs")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubView.API.Models.ClubMember", "ClubMember")
                        .WithMany("MemberClubs")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("ClubMember");
                });

            modelBuilder.Entity("ClubView.API.Models.Club", b =>
                {
                    b.Navigation("MemberClubs");
                });

            modelBuilder.Entity("ClubView.API.Models.ClubMember", b =>
                {
                    b.Navigation("MemberClubs");
                });
#pragma warning restore 612, 618
        }
    }
}
